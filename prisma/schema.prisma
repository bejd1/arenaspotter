datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Post {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  author                  String
  name                    String
  city                    String
  zipOrPostalCode         String
  street                  String
  email                   String
  phoneNumber             String
  people                  Int
  cost                    Int
  status                  String
  football                String?
  basketball              String?
  netball                 String?
  size                    String
  surface                 String
  toilet                  String
  parking                 String
  showers                 String
  dressingRoom            String
  lighting                String
  // allTime              String
  openingMonday           String?
  openingHoursMonday      String?
  openingTuesday          String?
  openingHoursTuesday     String?
  openingWednesday        String?
  openingHoursWednesday   String?
  openingThursday         String?
  openingHoursThursday    String?
  openingFriday           String?
  openingHoursFriday      String?
  openingSaturday         String?
  openingHoursSaturday    String?
  openingSunday           String?
  openingHoursSunday      String?
  description             String?
  instagram               String? 
  facebook                String?
  website                 String?
  image                   String
  premium                 String
}

model ReportArena {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  arenaId       String
  email         String  
  title         String
  message       String
}


model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  password       String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           String    @default("user")

  accounts       Account[]

  @@map("user")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  token_type        String?
  refresh_token     String? @db.String
  access_token      String? @db.String
  id_token          String? @db.String
  scope             String?
  session_state     String?
  expires_at        Int?

  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String  @db.ObjectId

  @@unique([provider, providerAccountId])
  @@map("account")
}